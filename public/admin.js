const telegramApp = window.Telegram.WebApp;
const adminId = new URLSearchParams(window.location.search).get("adminId");
const API_BASE_URL = "";
let salesChart = null;

const state = {
  menuItems: [],
  orders: [], // –°—Ç–∞–Ω –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω—å
};

// –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–∞ –¥–∞—à–±–æ—Ä–¥—ñ
function updateDashboardStats() {
  axios
    .get(`${API_BASE_URL}/api/menu`)
    .then(({ data }) => {
      $("#totalDishes").text(data.length || 0);
      state.menuItems = data;
    })
    .catch((err) => console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–µ–Ω—é:", err));
}

// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏
function loadAnalytics() {
  axios
    .get(`${API_BASE_URL}/api/analytics/summary`, { params: { adminId } })
    .then(({ data: { salesByCategory, topSellingItems } }) => {
      const ctx = document.getElementById("salesByCategoryChart").getContext("2d");
      if (salesChart) salesChart.destroy();
      // –ü—Ä–∏–º—ñ—Ç–∫–∞: Chart.js –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π —É –≤–∞—à–æ–º—É HTML, —Ç–æ–º—É —Ü–µ–π –∫–æ–¥ –º–æ–∂–µ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –ø–æ–º–∏–ª–∫—É.
      // –©–æ–± –≤—ñ–Ω –∑–∞–ø—Ä–∞—Ü—é–≤–∞–≤, –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ Chart.js –¥–æ <head>
      /*
      salesChart = new Chart(ctx, {
        type: "doughnut",
        data: {
          labels: salesByCategory.map((item) => item._id),
          datasets: [{
            label: "–ü—Ä–æ–¥–∞–∂—ñ",
            data: salesByCategory.map((item) => item.totalSales),
            backgroundColor: ["#ff6b35", "#2c3e50", "#f39c12", "#27ae60", "#8e44ad"],
            borderColor: "#ffffff",
            borderWidth: 2,
          }],
        },
        options: {
          responsive: true,
          plugins: {
            legend: { position: "top" },
            title: { display: false },
          },
        },
      });
      */

      const $topItemsList = $("#topSellingItemsList").empty();
      topSellingItems.length
        ? topSellingItems.forEach(({ _id, totalQuantity }) =>
            $topItemsList.append(`<li><span>${_id}</span> <span>–ü—Ä–æ–¥–∞–Ω–æ: ${totalQuantity}</span></li>`)
          )
        : $topItemsList.append('<li class="no-items">–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –ø—Ä–æ –ø—Ä–æ–¥–∞–∂—ñ.</li>');
    })
    .catch((error) => console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏:", error));
}

// –ù–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å
function loadOrders() {
    const $ordersList = $("#adminOrdersList").html(
        '<div class="loading"><div class="spinner"></div></div>'
    );

    axios.get(`${API_BASE_URL}/api/orders`, { params: { adminId } })
        .then(({ data }) => {
            state.orders = data;
            $ordersList.empty();
            if (!data.length) {
                $ordersList.html('<p class="no-items">–ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å</p>');
                return;
            }

            data.forEach(order => {
                const orderItemsHtml = order.items.map(item =>
                    `<li>‚Ä¢ ${item.name} x ${item.quantity} (–¥–æ–¥–∞–≤/–ª–∞ ${item.addedBy || '–≤–ª–∞—Å–Ω–∏–∫'})</li>`
                ).join('');

                const orderCard = `
                    <div class="admin-order-item" data-id="${order._id}">
                        <div class="order-header">
                            <h4>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ${order._id.slice(-6).toUpperCase()}</h4>
                            <span>${new Date(order.dateTime).toLocaleString('uk-UA')}</span>
                        </div>
                        <div class="order-details">
                            <p><strong>–ö–ª—ñ—î–Ω—Ç:</strong> @${order.userName || '–ê–Ω–æ–Ω—ñ–º'} ${order.isGroupOrder ? '<strong>(–°–ø—ñ–ª—å–Ω–µ)</strong>' : ''}</p>
                            <ul>${orderItemsHtml}</ul>
                        </div>
                        <div class="order-footer">
                            <span class="order-total">–í—Å—å–æ–≥–æ: ${order.total} –≥—Ä–Ω</span>
                            <button class="btn btn-accept" data-id="${order._id}">
                                <span>‚úÖ</span> –ü—Ä–∏–π–Ω—è—Ç–∏
                            </button>
                        </div>
                    </div>
                `;
                $ordersList.append(orderCard);
            });
        })
        .catch((error) => {
            console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å:", error);
            $ordersList.html('<p class="error">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å</p>');
        });
}


// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É —Å—Ç—Ä–∞–≤
function loadMenuItems() {
  const $menuList = $("#adminMenuList").html(
    '<div class="loading"><div class="spinner"></div></div>'
  );

  axios
    .get(`${API_BASE_URL}/api/menu`)
    .then(({ data }) => {
      state.menuItems = data;
      $menuList.empty();
      if (!data.length) {
        $menuList.html('<p class="no-items">–ù–µ–º–∞—î —Å—Ç—Ä–∞–≤ —É –º–µ–Ω—é</p>');
        return;
      }
      data.forEach(({ id, image, name, price, category, description }) => { // –î–æ–¥–∞–≤ description –¥–æ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó
        $menuList.append(`
          <div class="admin-menu-item" data-id="${id}" data-description="${description}" data-category="${category}">
            <img src="${image || './placeholder.jpg'}" alt="${name}" onerror="this.onerror=null;this.src='./placeholder.jpg';">
            <div class="admin-menu-info">
              <h4>${name}</h4>
              <p>${price} –≥—Ä–Ω - ${category}</p>
            </div>
            <div class="admin-menu-actions">
              <button class="btn-icon btn-edit">‚úèÔ∏è</button>
              <button class="btn-icon btn-delete">üóëÔ∏è</button>
            </div>
          </div>
        `);
      });
    })
    .catch((error) => {
      console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç—Ä–∞–≤:", error);
      $menuList.html('<p class="error">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–µ–Ω—é</p>');
    });
}

// –°–∫–∏–¥–∞–Ω–Ω—è —Ñ–æ—Ä–º–∏
function resetForm() {
  $("#menuItemForm")[0].reset();
  $("#itemId").val("");
  $("#formIcon").text("‚ûï");
  $("#formTitle").text("–î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É —Å—Ç—Ä–∞–≤—É");
  $("#formSubmitBtn").html("<span>‚ûï</span> –î–æ–¥–∞—Ç–∏ —Å—Ç—Ä–∞–≤—É").prop("disabled", false);
  $("#cancelEditBtn").hide();
  $("#fileLabel").text("üì∑ –û–±–µ—Ä—ñ—Ç—å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è");
}

// –ü–æ–∫–∞–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∞–±–æ —É—Å–ø—ñ—Ö
function showToast(message, isError = false) {
  const $toast = $('<div class="toast"></div>').text(message);
  if (isError) {
      $toast.addClass('error');
  }
  $("body").append($toast);
  setTimeout(() => {
    $toast.addClass("show");
    setTimeout(() => $toast.removeClass("show").delay(300).remove(), 3000);
  }, 100);
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø–æ–¥—ñ–π
$(document).ready(() => {
  telegramApp.expand();
  updateDashboardStats();
  loadAnalytics();
  loadMenuItems();
  loadOrders(); // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ

  // –ó–º—ñ–Ω–∞ –Ω–∞–∑–≤–∏ —Ñ–∞–π–ª—É –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
  $("#itemImage").on("change", (e) => {
    const file = e.target.files[0];
    $("#fileLabel").text(file ? file.name : "üì∑ –û–±–µ—Ä—ñ—Ç—å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è");
  });

  // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º–∏
  $("#menuItemForm").on("submit", (e) => {
    e.preventDefault();
    const itemId = $("#itemId").val();
    const formData = new FormData();
    formData.append("adminId", adminId);
    formData.append("name", $("#itemName").val());
    formData.append("description", $("#itemDescription").val());
    formData.append("price", $("#itemPrice").val());
    formData.append("category", $("#itemCategory").val());
    const imageFile = $("#itemImage")[0].files[0];
    if (imageFile) formData.append("image", imageFile);

    const url = itemId ? `${API_BASE_URL}/api/menu/${itemId}` : `${API_BASE_URL}/api/menu`;
    const method = itemId ? "put" : "post";

    $("#formSubmitBtn")
      .prop("disabled", true)
      .html('<span>üîÑ</span> –û–±—Ä–æ–±–∫–∞...');

    axios({
      method,
      url,
      data: formData,
      headers: { "Content-Type": "multipart/form-data" },
    })
      .then(() => {
        loadMenuItems();
        updateDashboardStats();
        resetForm();
        showToast(`–°—Ç—Ä–∞–≤—É —É—Å–ø—ñ—à–Ω–æ ${itemId ? "–æ–Ω–æ–≤–ª–µ–Ω–æ" : "–¥–æ–¥–∞–Ω–æ"}!`);
      })
      .catch((error) => {
        showToast(`–ü–æ–º–∏–ª–∫–∞: ${error.response?.data?.error || "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ —Å—Ç—Ä–∞–≤—É"}`, true);
      })
      .finally(() => {
        // –ö–Ω–æ–ø–∫–∞ —Å–∫–∏–¥–∞—î—Ç—å—Å—è —É —Ñ—É–Ω–∫—Ü—ñ—ó resetForm()
      });
  });

  // –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Å—Ç—Ä–∞–≤–∏
  $("#adminMenuList").on("click", ".btn-edit", function () {
    const $itemElement = $(this).closest(".admin-menu-item");
    const itemId = $itemElement.data("id");
    
    // –®—É–∫–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –≤ —Å—Ç–∞–Ω—ñ, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–≤–Ω—ñ –¥–∞–Ω—ñ
    const item = state.menuItems.find(i => i.id === itemId);

    if (item) {
      $("#itemId").val(item.id);
      $("#itemName").val(item.name);
      $("#itemDescription").val(item.description);
      $("#itemPrice").val(item.price);
      $("#itemCategory").val(item.category);
      $("#fileLabel").text("üì∑ –ó–º—ñ–Ω–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è");
      $("#formIcon").text("‚úèÔ∏è");
      $("#formTitle").text("–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Å—Ç—Ä–∞–≤—É");
      $("#formSubmitBtn").html("<span>üíæ</span> –ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏").prop('disabled', false);
      $("#cancelEditBtn").show();
      $('html, body').animate({ scrollTop: 0 }, 'smooth');
    } else {
      showToast("–ü–æ–º–∏–ª–∫–∞: –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ —Å—Ç—Ä–∞–≤–∏.", true);
    }
  });

  // –°–∫–∞—Å—É–≤–∞–Ω–Ω—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
  $("#cancelEditBtn").on("click", resetForm);

  // –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å—Ç—Ä–∞–≤–∏
  $("#adminMenuList").on("click", ".btn-delete", function () {
    if (!confirm("–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü—é —Å—Ç—Ä–∞–≤—É?")) return;

    const itemId = $(this).closest(".admin-menu-item").data("id");
    axios
      .delete(`${API_BASE_URL}/api/menu/${itemId}`, { data: { adminId } })
      .then(() => {
        loadMenuItems();
        updateDashboardStats();
        showToast("–°—Ç—Ä–∞–≤—É —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ!");
      })
      .catch((error) => {
        showToast(`–ü–æ–º–∏–ª–∫–∞: ${error.response?.data?.error || "–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ —Å—Ç—Ä–∞–≤—É"}`, true);
      });
  });
  
  // –ù–æ–≤–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –ø—Ä–∏–π–Ω—è—Ç—Ç—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
  $("#adminOrdersList").on("click", ".btn-accept", function () {
      if (!confirm("–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –ø—Ä–∏–π–Ω—è—Ç–∏ —Ü–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è? –ö–ª—ñ—î–Ω—Ç—É –±—É–¥–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è.")) return;

      const orderId = $(this).data("id");
      const $button = $(this);

      $button.prop("disabled", true).html('<span>üîÑ</span> –û–±—Ä–æ–±–∫–∞...');

      axios.post(`${API_BASE_URL}/api/orders/update-status/${orderId}`, {
          adminId,
          status: "–ü—Ä–∏–π–Ω—è—Ç–æ",
      })
      .then(() => {
          showToast("–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ! –ö–ª—ñ—î–Ω—Ç –æ—Ç—Ä–∏–º–∞–≤ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è.");
          // –ü–ª–∞–≤–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
          $button.closest('.admin-order-item').fadeOut(500, function() { 
              $(this).remove();
              if ($("#adminOrdersList").children().length === 0) {
                  loadOrders(); // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ, —â–æ–± –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "–ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å"
              }
          });
      })
      .catch((error) => {
          showToast(`–ü–æ–º–∏–ª–∫–∞: ${error.response?.data?.error || "–ù–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–∏–π–Ω—è—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"}`, true);
          $button.prop("disabled", false).html('<span>‚úÖ</span> –ü—Ä–∏–π–Ω—è—Ç–∏');
      });
  });

});
